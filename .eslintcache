[{"D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\index.js":"1","D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\App.js":"2","D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\reportWebVitals.js":"3","D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\components\\Home\\Home.js":"4","D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\components\\Home\\Navbarcomp.js":"5","D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\components\\Home\\MediaCard.js":"6"},{"size":547,"mtime":1606915149364,"results":"7","hashOfConfig":"8"},{"size":255,"mtime":1606999556802,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":26499,"mtime":1608636267685,"results":"11","hashOfConfig":"8"},{"size":1700,"mtime":1607835226428,"results":"12","hashOfConfig":"8"},{"size":1946,"mtime":1608630764697,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"973ti5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\index.js",[],["31","32"],"D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\App.js",[],"D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\reportWebVitals.js",[],"D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\components\\Home\\Home.js",["33","34","35","36","37","38","39","40","41","42","43"],"import React, { Component } from 'react';\r\nimport Navbarcomp from './Navbarcomp';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {FormControl,InputLabel,Input,FormHelperText,TextField,Button,Container} from '@material-ui/core'\r\nimport { InputText } from 'primereact/inputtext';\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport MediaCard from './MediaCard'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Select from '@material-ui/core/Select';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport axios from 'axios';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      margin:\"30px\",\r\n      height:\"auto\"\r\n    },\r\n    about: {\r\n      flexGrow: 1,\r\n     \r\n      height:\"auto\"\r\n    },\r\n    partner: {\r\n      flexGrow: 1,\r\n      margin:\"30px\",\r\n      height:\"auto\"\r\n    },\r\n    paper: {\r\n      \r\n      padding: theme.spacing(2),\r\n     \r\n      color: theme.palette.text.secondary,\r\n      height:\"600px\"\r\n    },\r\n    textField: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n      width: \"80%\"\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n      width: \"80%\"\r\n    },\r\n    form:{\r\n      marginLeft:\"50px\"\r\n    },\r\n    card:{\r\n     \r\n      marginTop:theme.spacing(5),\r\n      marginLeft:theme.spacing(8),\r\n      marginRight:theme.spacing(6),\r\n      marginBottom: theme.spacing(5),\r\n\r\n    },\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    mpaper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n     \r\n      borderRadius:\"20px\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      width:\"600px\",\r\n      height:\"600px\"\r\n    },\r\n    mbutton:{\r\n      margin:theme.spacing(2),\r\n\r\n    },\r\n    imgcontainer:{\r\n      marginLeft:theme.spacing(7),\r\n      textAlign:\"center\"\r\n    },\r\n    img:{\r\n      margin:\"30px\"\r\n    }\r\n    \r\n  }));\r\n  function Item(props)\r\n{\r\n    return (\r\n     \r\n           \r\n \r\n            <img src={props.item.src} width=\"100%\" height=\"500px\" alt={props.item.alttext}/>\r\n       \r\n    )\r\n}\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nexport default function Home() {\r\n    const  classes = useStyles();\r\n    const [open,setOpen] = React.useState(false);\r\n    const [load,showLoader] = React.useState(false);\r\n    const [showSnack,setShowSnack] = React.useState(false);\r\n    const vertical = \"Top\";\r\n    const horizontal = \"Right\";\r\n    const [form,setForm] = React.useState(true);\r\n    const [errors,setErrors] = React.useState(\r\n      {\r\n        name:\"\",\r\n        mobile:\"\",\r\n        email:\"\",\r\n        company:\"\",\r\n        monthly_salary:\"\",\r\n        loan_type:\"\",\r\n        monthly_expenses:\"\"\r\n     \r\n      }\r\n    )\r\n    const [user,setUser] = React.useState(\r\n      {\r\n        name:\"\",\r\n        mobile:\"\",\r\n        email:\"\",\r\n        company:\"\",\r\n        monthly_salary:0,\r\n        loan_type:\"loan_type\",\r\n        monthly_expenses:0,\r\n        eligibility_amount:0\r\n      }\r\n    )\r\n    const login = async()=>{\r\n    \r\n      console.log(user)\r\n      showLoader(true);\r\n      await axios.post(\"https://pothani-admin.herokuapp.com/add-user/\",user).then(\r\n        (response)=>{\r\n          console.log(\"User Data captured successfully\",response.data);\r\n          setShowSnack(true);\r\n        }\r\n      ).catch(\r\n        (error)=>{\r\n          console.log(\"Unable to save user data\");\r\n        }\r\n      )\r\n\r\n      setTimeout(()=>{\r\n        showLoader(false);\r\n        resetFields();\r\n      \r\n      },2000);\r\n     \r\n    }\r\n    const resetFields = ()=>{\r\n      setUser( {\r\n        name:\"\",\r\n        mobile:\"\",\r\n        email:\"\",\r\n        company:\"\",\r\n        monthly_salary:0,\r\n        loan_type:\"loan_type\",\r\n        monthly_expenses:0,\r\n        loanamount:0,\r\n        eligibility_amount:0,\r\n        location:\"\"\r\n      });\r\n      setErrors(\r\n        {\r\n          name:\"\",\r\n          mobile:\"\",\r\n          email:\"\",\r\n          company:\"\",\r\n          monthly_salary:\"\",\r\n          loan_type:\"\",\r\n          monthly_expenses:\"\",\r\n          loanamount:\"\",\r\n          location:\"\"\r\n        }\r\n      )\r\n    }\r\n    const dummy = ()=>{\r\n\r\n    }\r\n    const validate = ()=>{\r\n       if(user.name===\"\" || user.mobile===\"\" || user.email===\"\" || user.company===\"\")\r\n        return false \r\n      if(user.loan_type==\"loan_type\" || user.loan_type===\"\")\r\n      {\r\n        setErrors({\r\n          ...errors,loan_type:\"Please select Loan type\"\r\n        });\r\n        return false;\r\n      }\r\n      else\r\n      {\r\n        setErrors({...errors,loan_type:\"\"});\r\n      }\r\n      if(user.mobile.length!==10)\r\n      {\r\n        setErrors({...errors,mobile:\"Mobile number should be 10 digits\"});\r\n        return false\r\n      }\r\n      else\r\n      {\r\n        setErrors({...errors,mobile:\"\"})\r\n      }\r\n      let rgx =  /^[\\w\\.]+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/\r\n      if(!rgx.test(user.email))\r\n      {\r\n        setErrors({...errors,email:\"Invalid Email Format\"});\r\n        return false\r\n      }\r\n      else\r\n      {\r\n        console.log(\"inside email check\")\r\n        setErrors({...errors,email:\"\"})\r\n      }\r\n      return true\r\n    }\r\n\r\n    var items = [\r\n      {\r\n          src: \"/loan.jpg\",\r\n          alttext: \"Loans\"\r\n      },\r\n      {\r\n          src: \"/ploan.jpg\",\r\n          alttext: \"All types of Loans\"\r\n      },\r\n      {\r\n          src: \"/bloan.jpg\",\r\n          alttext: \"Agreement\"\r\n    },\r\n    {\r\n      src: \"/hloan.jpg\",\r\n      alttext: \"All loans\"\r\n    }\r\n  ];\r\n  var loancards = [\r\n    {\r\n      src: \"/ploan.jpg\",\r\n      title: \"Personal Loan\",\r\n      description:\"A Personal Loan is a type of unsecured loan and helps to meet one's current financial needs. \"\r\n    },\r\n    {\r\n      src: \"/hloan.jpg\",\r\n      title: \"Home Loan\",\r\n      description:\"We can choose variety of home loans based on their interest rates and other buyers-friendly features. We can avail home loans based on our existing financial capabilities or worth and repay it over a period of time.Interest Rates offered on home loans can be either fixed or floating.\"\r\n    },\r\n    {\r\n      src: \"/bloan.png\",\r\n      title: \"Business Loan\",\r\n      description:\"A business loan is a loan specifically intended for business purposes. As with all loans, it involves the creation of a debt\"\r\n    },\r\n  ]\r\n        return (\r\n            <>\r\n            <Navbarcomp/>\r\n            <div className={classes.root} id=\"home\" style={{marginTop:\"100px\"}}>\r\n         \r\n            <Grid container  >\r\n                \r\n                   \r\n                      <Grid item md={7}  sm={12}>\r\n                         \r\n                             {/* <img src=\"/loan.jpg\" alt=\"Need Loans??\" /> */}\r\n                             <Carousel >\r\n                              {\r\n                                  items.map( (item, i) => <Item key={i} item={item} /> )\r\n                              }\r\n                            </Carousel>\r\n                        \r\n                      </Grid>\r\n                      <Grid item xs={1}>\r\n\r\n                      </Grid>\r\n                      <Grid item md={4} xs={12}style={{textAlign:\"center\"}}>\r\n                        <h4>Need Instant Loan?</h4>\r\n                      <form onSubmit={(event)=>{event.preventDefault();dummy();}}>\r\n                      <TextField\r\n                          required\r\n                          id=\"outlined-required\"\r\n                          label=\"Name\"\r\n                          className={classes.textField}\r\n                          value = {user.name}\r\n                          onChange={(event)=>setUser({...user,name:event.target.value})}\r\n                          variant=\"outlined\"\r\n                          helperText={errors.name}\r\n                          error={errors.name?true:false}\r\n                          size=\"small\"\r\n                        />\r\n                          <TextField\r\n                          required\r\n                          id=\"outlined-required\"\r\n                          label=\"Mobile Number\"\r\n                          value={user.mobile}\r\n                          onChange={(event)=>{\r\n                            if(event.target.value.length>10)\r\n                              setErrors({...errors,mobile:\"Mobile number should not exceed 10 digits.\"})\r\n                            else\r\n                              setErrors({...errors,mobile:\"\"})\r\n                            setUser({...user,mobile:event.target.value})\r\n                          }}\r\n                          className={classes.textField}\r\n                          helperText={errors.mobile}\r\n                          error={errors.mobile?true:false}\r\n                          variant=\"outlined\"\r\n                          type=\"number\"\r\n                          \r\n                          size=\"small\"\r\n                        />\r\n                          <TextField\r\n                          required\r\n                          id=\"outlined-required\"\r\n                          onChange={(event)=>setUser({...user,email:event.target.value})}\r\n                          label=\"Email\"\r\n                          value={user.email}\r\n                          className={classes.textField}\r\n                          helperText={errors.email}\r\n                          error={errors.email?true:false}\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                        />\r\n                          <TextField\r\n                          required\r\n                          id=\"outlined-required\"\r\n                          label=\"Company\"\r\n                          value={user.company}\r\n                          onChange={(event)=>setUser({...user,company:event.target.value})}\r\n                          className={classes.textField}\r\n                          helperText={errors.company}\r\n                          error={errors.company?true:false}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                        />\r\n                           <TextField\r\n                          required\r\n                          id=\"outlined-required\"\r\n                          label=\"Location\"\r\n                          value={user.location}\r\n                          onChange={(event)=>setUser({...user,location:event.target.value})}\r\n                          className={classes.textField}\r\n                          helperText={errors.location}\r\n                          error={errors.location?true:false}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                        />\r\n                       \r\n                         <FormControl variant=\"outlined\" size=\"small\"  className={classes.textField} required>\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Loan Type </InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={user.loan_type}\r\n                            onChange={(event)=>{\r\n                              setUser({...user,loan_type:event.target.value},()=>validate());\r\n                            \r\n                            }}\r\n                            label=\"Loan Type\"\r\n                            size=\"small\"\r\n                            native\r\n                      \r\n                           \r\n                            required\r\n\r\n                          >\r\n                            {/* <MenuItem value=\"\">\r\n                              <em>None</em> */}\r\n                            {/* </MenuItem> */}\r\n                            <option value={\"loan_type\"}>Select Loan Type</option>\r\n                            <option value={\"Personal\"}>Personal Loan</option>\r\n                            <option value={\"Home\"}>Home Loan</option>\r\n                         \r\n                          </Select>\r\n                        \r\n                     </FormControl>\r\n                    {user.loan_type===\"loan_type\"? <p style={{color:\"red\"}}>{errors.loan_type}</p>:null}\r\n                        <Button variant=\"contained\" color=\"primary\"  type=\"submit\"\r\n                        \r\n                         onClick={()=>{\r\n                              let temp = validate();\r\n                               setOpen(temp);\r\n                         }}\r\n                         className={classes.button}>\r\n                                Proceed\r\n                        </Button>\r\n                        </form>\r\n                        <b>If any Query Please Call to <span style={{color:\"blue\"}}>9743700072</span></b><br/>\r\n                        <b>For More Details <a href=\"#\" onClick={()=>{setForm(false);setOpen(true);}}>Check Eligibilty Calculator</a></b>\r\n                        <Modal\r\n                            aria-labelledby=\"transition-modal-title\"\r\n                            aria-describedby=\"transition-modal-description\"\r\n                            className={classes.modal}\r\n                            open={open}\r\n                            onClose={()=>{}}\r\n                            closeAfterTransition\r\n                            BackdropComponent={Backdrop}\r\n                            BackdropProps={{\r\n                              timeout: 500,\r\n                            }}\r\n                          >\r\n                          <Fade in={open}>\r\n                            <div className={classes.mpaper}>\r\n                              <h3 style={{color:\"brown\",textAlign:\"center\",marginTop:\"50px\"}}>Loan Eligibility Calculator</h3>\r\n                              <div style={{textAlign:'center',marginTop:\"50px\"}}>\r\n                              <form onSubmit={login}>\r\n                              <FormControl variant=\"outlined\" size=\"small\"  className={classes.textField} required>\r\n\r\n                                  <InputLabel id=\"demo-simple-select-outlined-label\">Loan Type </InputLabel>\r\n                                  <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    value={user.loan_type}\r\n                                    onChange={(event)=>setUser({...user,loan_type:event.target.value})}\r\n                                    label=\"Loan Type\"\r\n                                    size=\"small\"\r\n                                    native\r\n                                    autoFocus\r\n                                    required\r\n\r\n                                  >\r\n                                    {/* <MenuItem value=\"\">\r\n                                      <em>None</em> */}\r\n                                    {/* </MenuItem> */}\r\n                                    <option value={\"loan_type\"}>Select Loan Type</option>\r\n                                    <option value={\"Personal\"}>Personal Loan</option>\r\n                                    <option value={\"Home\"}>Home Loan</option>\r\n                                  \r\n                                  </Select>\r\n                                    </FormControl>\r\n                                    {/* <TextField\r\n                                        required\r\n                                        id=\"outlined-required\"\r\n                                        label=\"Loan Amount\"\r\n                                        type=\"number\"\r\n                                        onChange={(event)=>setUser({...user,loanamount:event.target.value})}\r\n                                        className={classes.textField}\r\n                                        helperText={errors.loanamount}\r\n                                        error={errors.loanamount?true:false}\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                      /> */}\r\n                                     {/* {errors.loanamount? <p style={{color:\"red\"}}>{errors.loanamount}</p>:null} */}\r\n                                      <TextField\r\n                                        required\r\n                                        id=\"outlined-required\"\r\n                                        label=\"Net Salary Per Month\"\r\n                                        type=\"number\"\r\n                                        disabled={user.loan_type===\"loan_type\"}\r\n                                        onChange={(event)=>{\r\n                                          let eligible = (event.target.value - user.monthly_expenses)*20;\r\n                                          eligible = eligible>0?eligible:0;\r\n                                          setUser({...user,monthly_salary:event.target.value,eligibility_amount:eligible});\r\n                                          // let temp = eligible<user.loanamount;\r\n                                          // if(temp)\r\n                                          //   setErrors({...errors,loanamount:\"Loan amount cannot be greater than \"+eligible})\r\n                                          // else \r\n                                          // setErrors({...errors,loanamount:\"\"})\r\n                                         }\r\n                                         \r\n                                        }\r\n                                        className={classes.textField}\r\n                                        helperText={errors.monthly_salary}\r\n                                        error={errors.monthly_salary?true:false}\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                      />\r\n                                      <TextField\r\n                                        required\r\n                                        id=\"outlined-required\"\r\n                                        label=\"Expenses Per Month\"\r\n                                        type=\"number\"\r\n                                        disabled={user.loan_type===\"loan_type\"}\r\n                                        onChange={(event)=>{\r\n                                          let eligible = (user.monthly_salary - event.target.value)*20;\r\n                                          eligible = eligible>0?eligible:0;\r\n                                          setUser({...user,monthly_expenses:event.target.value,eligibility_amount:eligible})\r\n                                          // let temp = eligible<user.loanamount;\r\n                                          // if(temp)\r\n                                          //   setErrors({...errors,loanamount:\"Loan amount cannot be greater than \"+eligible})\r\n                                          //   else \r\n                                          //   setErrors({...errors,loanamount:\"\"})\r\n                                          }\r\n                                        }\r\n                                        className={classes.textField}\r\n                                        helperText={errors.monthly_expenses}\r\n                                        error={errors.monthly_expenses?true:false}\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                      />\r\n                                      <br/>\r\n                                      <h4 style={{color:\"green\"}}>You are eligible for Rs.{user.eligibility_amount} </h4>\r\n                                      <Button variant=\"outlined\" color=\"secondary\" onClick={()=>{setOpen(false);setForm(true);resetFields();}} className={classes.mbutton}>\r\n                                          Cancel\r\n                                      </Button>\r\n                                      <Button variant=\"outlined\" color=\"secondary\" \r\n                                      disabled={user.eligibility_amount===0 || user.loan_type===\"loan_type\" || form===false}\r\n                                      onClick={()=>{\r\n                                          setOpen(false);\r\n                                            login();\r\n                                          }} \r\n                                          className={classes.mbutton}>\r\n                                          Submit\r\n                                      </Button>\r\n                                      </form>\r\n                                </div>\r\n                                {form===false?<p style={{color:\"red\",textAlign:\"center\"}}>Note: Please Fill the Form in Main page to Submit a request.</p>:null}\r\n                            </div>\r\n                          </Fade>\r\n                        </Modal>\r\n                      </Grid>\r\n                      {load?<div style={{width:\"100\",height:\"100\",position:\"fixed\",top:\"40%\",left:\"77%\"}}><CircularProgress color=\"secondary\" size={70} /></div>:null}\r\n                      <Snackbar open={showSnack} autoHideDuration={6000}  anchorOrigin={{ vertical, horizontal }} onClose={()=>setShowSnack(false)}>\r\n                          <Alert onClose={()=>setShowSnack(false)} severity=\"success\">\r\n                            Your Application is Submitted Successfully .<br/>\r\n                            Our Team will get back to you in 24 hours.\r\n                          </Alert>\r\n                     </Snackbar>\r\n             \r\n            </Grid>\r\n           \r\n            </div>\r\n            <div className={classes.root} id=\"services\" >\r\n                 {/* <div style={{height:\"600px\",backgroundColor:\"#fff8e7\"}}> */}\r\n                 <Grid container   style={{height:\"auto\",backgroundColor:\"#fff8e7\",textAlign:\"center\"}}>\r\n                   {loancards.map(\r\n                     (item,i)=>{\r\n                       return(\r\n                                <Grid item xs={12} md={3} className={classes.card}>\r\n                                    <MediaCard item={item} setOpen={setOpen} setForm={setForm}/>\r\n                                </Grid>\r\n                       )\r\n                     }\r\n                   )}\r\n                    \r\n                  \r\n                  </Grid>\r\n                 {/* </div> */}\r\n            </div>\r\n            <div className={classes.partner} id=\"contact\">\r\n            <div style={{height:\"auto\",backgroundColor:\"#300000\",color:\"white\"}}>\r\n              <h3 style={{textAlign:\"center\",paddingTop:\"20px\",fontFamily:\"Cursive\"}}>Our Client Partners</h3><br/>\r\n              <Grid container >\r\n                    <Grid item xs={12}  style={{borderRight:\"1px solid white\"}}>\r\n                        <h4 style={{textAlign:\"center\",paddingTop:\"30px\",fontFamily:\"Cursive\"}}>Personal Loan</h4>\r\n                        <Grid className={classes.imgcontainer}>\r\n                           <img src=\"/axis.png\" alt=\"Axis Bank\" width=\"200px\" height=\"50px\"  className={classes.img} style={{backgroundColor:\"white\"}}/>\r\n                           <img src=\"/icici.png\" alt=\"ICICI Bank\" width=\"200px\" height=\"50px\"  className={classes.img} style={{backgroundColor:\"white\"}}/>\r\n                           <img src=\"/hdfc.png\" alt=\"HDFC Bank\"  width=\"200px\" height=\"50px\" className={classes.img} style={{backgroundColor:\"white\"}}/>\r\n                        </Grid>\r\n                       \r\n                    </Grid>\r\n               \r\n                    <Grid item xs={12}>\r\n                        <h4 style={{textAlign:\"center\",paddingTop:\"30px\",fontFamily:\"Cursive\"}}>Home Loan</h4>\r\n                        <Grid className={classes.imgcontainer}>\r\n                           <img src=\"/sbi.png\" alt=\"State Bank\" width=\"200px\" height=\"50px\" className={classes.img} style={{backgroundColor:\"white\"}}/>\r\n                           <img src=\"/pnb.jpg\" alt=\"Punjab National Bank\" width=\"200px\" height=\"50px\" className={classes.img} style={{backgroundColor:\"white\"}}/>\r\n                        </Grid>\r\n                    </Grid>\r\n              </Grid>\r\n            </div>\r\n            </div>\r\n            <div className={classes.about} id=\"about\">\r\n            <div style={{height:\"auto\",backgroundColor:\"#142F3A\",color:\"white\"}}>\r\n                <Grid container >\r\n                    <Grid item xs={12} md={6}>\r\n                       <div style={{margin:\"40px\"}}>\r\n                          <h4>About Company Profile:</h4>\r\n                          <br/>\r\n                          <img src=\"/pothani.png\" alt=\"Pothani infotech solutions\"/> \r\n                          <br/><br/>\r\n                          <p>\r\n                          Pothani Solutions isfor small enterpreneurs. We are a one stop service provider that offers facilities such\r\n                           as Housing Loans, Personal Loans, Business Loans, Loan against Property, Loan against Shares, etc. \r\n                          We have tie ups with 40 leading Banks and NBFCs that offer competitive interest rates and terms of agreement.  \r\n                            \r\n                          </p>\r\n                       </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                       <div style={{margin:\"40px\"}}>\r\n                          <h4>Contact:</h4>\r\n                          <Grid md={6} xs={12}>Phone: {process.env.REACT_APP_MOBILENUMBER}</Grid>\r\n                          <Grid md={6} xs={12}>Email: Random@gmail.com</Grid>\r\n                          <Grid>\r\n                          <br/> Address:<br/> Old Madras Road,<br/>Near Bayappanahalli,<br/>Banglore.<br/>Pincode: 560038\r\n                          </Grid>\r\n                          \r\n                       </div>\r\n                    </Grid>\r\n                    <p style={{align:\"center\",paddingLeft:\"45%\"}}>copyright@2020</p>\r\n               </Grid>\r\n            </div>\r\n            </div>\r\n            </>\r\n        )\r\n   \r\n}\r\n","D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\components\\Home\\Navbarcomp.js",["44"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from '@material-ui/core/Button';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      fontFamily:\"Cursive\"\r\n    },\r\n   navstyles:{\r\n     backgroundColor:\"brown\"\r\n   },\r\n    logo: {\r\n      marginRight: theme.spacing(2),\r\n      alignContent:\"center\",\r\n      justifyContent:\"center\"\r\n    },\r\n    toolbarButtons: {\r\n      marginLeft: \"auto\",\r\n      marginRight: 25,\r\n      color:\"white\",\r\n      fontsize:\"36px\"\r\n    },\r\n  }));\r\n  \r\nexport default function Navbarcomp()\r\n{\r\n  const classes = useStyles();\r\n  return(\r\n      <div className={classes.root}>\r\n           <AppBar position=\"fixed\">\r\n                <Toolbar className={classes.navstyles}>\r\n                \r\n                    <Typography variant=\"h6\"   className={classes.title}>\r\n                       Pothani Solutions\r\n                    </Typography>\r\n                    <span className={classes.toolbarButtons}>\r\n                        <a href=\"#home\" className={classes.toolbarButtons}>\r\n                          Home </a>\r\n                        <a href=\"#services\" className={classes.toolbarButtons}> Services </a>\r\n                        <a href=\"#about\" className={classes.toolbarButtons}> Contact</a>\r\n                        <a href=\"#about\" className={classes.toolbarButtons}> About</a>\r\n                 \r\n                    </span>\r\n             </Toolbar>\r\n         </AppBar>\r\n      </div>\r\n  )\r\n}","D:\\Personal\\Loan_Elgibility\\loanelgibility\\src\\components\\Home\\MediaCard.js",["45"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // maxwidth: 340,\r\n    // width:\"90%\",\r\n    minWidth:\"auto\"\r\n  },\r\n  media: {\r\n    height: 200,\r\n  },\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid>\r\n    <Card  className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.item.src}\r\n          title={props.item.title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {props.item.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.item.description}\r\n            {props.item.title!==\"Home Loan\"?<><br/><br/><hr/></>:null}\r\n            <br/><br/>\r\n            <b>How to get {props.item.title}?</b>\r\n            <p> Call to our Representative for immediate Assistance. +91 9743700072</p>\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" href=\"#about\" color=\"primary\">\r\n         Contact\r\n        </Button>\r\n       {props.item.title!=\"Business Loan\"? <Button size=\"small\" color=\"primary\" onClick={()=>{\r\n         props.setForm(false);\r\n         props.setOpen(true)\r\n        }}>\r\n        Check Eligibility\r\n        </Button>:<span></span>}\r\n      </CardActions>\r\n    </Card>\r\n    </Grid>\r\n  );\r\n}\r\n",["46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":13},{"ruleId":"52","severity":1,"message":"57","line":6,"column":32,"nodeType":"54","messageId":"55","endLine":6,"endColumn":37},{"ruleId":"52","severity":1,"message":"58","line":6,"column":38,"nodeType":"54","messageId":"55","endLine":6,"endColumn":52},{"ruleId":"52","severity":1,"message":"59","line":6,"column":70,"nodeType":"54","messageId":"55","endLine":6,"endColumn":79},{"ruleId":"52","severity":1,"message":"60","line":7,"column":10,"nodeType":"54","messageId":"55","endLine":7,"endColumn":19},{"ruleId":"52","severity":1,"message":"61","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":16},{"ruleId":"52","severity":1,"message":"62","line":18,"column":8,"nodeType":"54","messageId":"55","endLine":18,"endColumn":15},{"ruleId":"63","severity":1,"message":"64","line":195,"column":24,"nodeType":"65","messageId":"66","endLine":195,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":215,"column":23,"nodeType":"69","messageId":"70","endLine":215,"endColumn":24,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":398,"column":45,"nodeType":"74","endLine":398,"endColumn":103},{"ruleId":"52","severity":1,"message":"75","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":14},{"ruleId":"63","severity":1,"message":"76","line":52,"column":25,"nodeType":"65","messageId":"66","endLine":52,"endColumn":27},{"ruleId":"48","replacedBy":"77"},{"ruleId":"50","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'Input' is defined but never used.","'FormHelperText' is defined but never used.","'Container' is defined but never used.","'InputText' is defined but never used.","'MenuItem' is defined but never used.","'Divider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["81","82"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","Expected '!==' and instead saw '!='.",["79"],["80"],"no-global-assign","no-unsafe-negation",{"messageId":"83","fix":"84","desc":"85"},{"messageId":"86","fix":"87","desc":"88"},"removeEscape",{"range":"89","text":"90"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"91","text":"92"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[5388,5389],"",[5388,5388],"\\"]